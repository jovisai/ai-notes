<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on AI Notes</title>
    <link>https://notes.muthu.co/tags/development/</link>
    <description>Recent content in Development on AI Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 06 Aug 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://notes.muthu.co/tags/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TDD with Coding Agents: Building a Rate Limiting Service</title>
      <link>https://notes.muthu.co/2025/08/tdd-with-coding-agents-building-a-rate-limiting-service/</link>
      <pubDate>Wed, 06 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://notes.muthu.co/2025/08/tdd-with-coding-agents-building-a-rate-limiting-service/</guid>
      <description>Problem Overview We&amp;rsquo;ll build a sophisticated rate limiting service that supports:&#xA;Multiple rate limiting algorithms (Token Bucket, Fixed Window, Sliding Window) Different storage backends (Memory, Redis) Per-user and per-API-key limits Rate limit headers in responses Graceful degradation when storage fails This is complex enough to demonstrate TDD&amp;rsquo;s power with AI agents.&#xA;Why TDD Works Exceptionally Well with AI Agents The AI Agent Advantage:&#xA;Perfect Memory: Never forgets edge cases once written in tests Pattern Recognition: Excellent at implementing algorithms to match test specifications Systematic Approach: Follows TDD discipline consistently Rapid Iteration: Fast feedback cycles between test and implementation The Key Insight: AI agents excel when they have clear specifications (tests) rather than vague requirements.</description>
    </item>
    <item>
      <title>The Complete Claude Code Best Practices Guide</title>
      <link>https://notes.muthu.co/2025/08/the-complete-claude-code-best-practices-guide/</link>
      <pubDate>Wed, 06 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://notes.muthu.co/2025/08/the-complete-claude-code-best-practices-guide/</guid>
      <description>A Comprehensive Manual Compiled from Developer Experiences and Community Knowledge&#xA;Table of Contents Introduction Quick Start &amp;amp; Setup Configuration Mastery Core Workflows &amp;amp; Patterns Advanced Techniques Team Workflows Testing &amp;amp; Quality Assurance Security &amp;amp; Production Practices Cost Optimization Multi-Claude Workflows MCP Integration Troubleshooting &amp;amp; Tips Community Resources Introduction Claude Code represents a paradigm shift in software development - it&amp;rsquo;s not just a coding assistant, but a general-purpose AI agent that happens to excel at code.</description>
    </item>
    <item>
      <title>My Thoughts on Andrew Ng&#39;s &#34;Building Faster and Smarter with AI&#34;</title>
      <link>https://notes.muthu.co/2025/07/my-thoughts-on-andrew-ngs-building-faster-and-smarter-with-ai/</link>
      <pubDate>Fri, 11 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://notes.muthu.co/2025/07/my-thoughts-on-andrew-ngs-building-faster-and-smarter-with-ai/</guid>
      <description>I watched Andrew Ng&amp;rsquo;s latest talk on AI startup strategy, and while I disagree with some of the hype, there are genuinely useful insights buried in the promotional language. Here&amp;rsquo;s what caught my attention. Ng isn&amp;rsquo;t chasing the latest transformer variant or arguing about AGI timelines. He&amp;rsquo;s focused on something much more important: how AI actually helps people build useful things faster.&#xA;Applications Win, Infrastructure Follows The media loves talking about chips and foundation models.</description>
    </item>
    <item>
      <title>Keeping Your AI Code-Gen Up-to-Date: An Introduction to Context Engineering</title>
      <link>https://notes.muthu.co/2025/07/keeping-your-ai-code-gen-up-to-date-an-introduction-to-context-engineering/</link>
      <pubDate>Wed, 02 Jul 2025 12:00:00 +0530</pubDate>
      <guid>https://notes.muthu.co/2025/07/keeping-your-ai-code-gen-up-to-date-an-introduction-to-context-engineering/</guid>
      <description>One of the most common frustrations with AI coding assistants is their tendency to generate code that is outdated or relies on deprecated libraries. This happens because the Large Language Models (LLMs) that power these assistants are trained on vast but static datasets. By the time a model is released, the libraries and frameworks it was trained on may have already been updated.&#xA;This is where context engineering comes in. Instead of relying on the LLM&amp;rsquo;s outdated knowledge, we can provide it with up-to-date information directly in the prompt.</description>
    </item>
    <item>
      <title>A Developer&#39;s Guide to Effective AI Coding Agents</title>
      <link>https://notes.muthu.co/2025/07/a-developers-guide-to-effective-ai-coding-agents/</link>
      <pubDate>Tue, 01 Jul 2025 11:00:00 +0530</pubDate>
      <guid>https://notes.muthu.co/2025/07/a-developers-guide-to-effective-ai-coding-agents/</guid>
      <description>AI-powered coding assistants are rapidly evolving from simple auto-completion tools into sophisticated, collaborative agents. While it&amp;rsquo;s tempting to offload entire tasks to these systems, the most effective approach is a guided one, where the developer remains the architect and the AI acts as a highly efficient executor.&#xA;This guide outlines a structured workflow for leveraging AI coding agents, ensuring you maintain control, improve code quality, and boost your productivity.&#xA;The Developer as Architect The fundamental principle of effective AI collaboration is that the developer must lead the process.</description>
    </item>
  </channel>
</rss>
